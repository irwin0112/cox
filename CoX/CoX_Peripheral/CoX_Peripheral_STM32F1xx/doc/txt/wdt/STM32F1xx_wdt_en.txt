//*****************************************************************************
//
//! \defgroup STM32F1xx_WDT STM32F1xx WDT
//! 
//! \brief ST STM32F1xx WDT Peripheral Driver.
//!
//! The CoX Peripheral Library also provides APIs for full functions of Holtek
//! STM32F1xx WDT. This module supports the whole STM32F1xx Series.
//!
//! <br />
//! <h1>Contents</h1>
//! - \ref STM32F1xx_WDT_Blcok
//! - \ref STM32F1xx_WDT_Function_Desc
//! - \ref STM32F1xx_WDT_API_Group
//!   - \ref STM32F1xx_WDT_API_Group_Config
//!   - \ref STM32F1xx_WDT_API_Group_Function
//!   - \ref STM32F1xx_WDT_API_Group_Control
//!   .
//! - \ref STM32F1xx_WDT_Usage
//! .
//!
//! <br />
//! \section STM32F1xx_WDT_Blcok 1. WDT Physical Block
//! <img src="STM32F1xx_watchdog_block.png" />
//! 
//! <br />
//! \section STM32F1xx_WDT_Function_Desc 2. Functional Description
//! WDT includes the following functions:
//! - Interrupt
//! - Reset
//! .
//! 
//! <br />
//! \section STM32F1xx_WDT_API_Group 3. API Groups
//! 
//! The WDT API is broken into two groups of functions : 
//! - those that deal with configuration the WDT
//! - those that deal with functions
//! - those that deal with control
//! .
//!
//! <br />
//! \subsection STM32F1xx_WDT_API_Group_Config 3.1 WDT Config APIs
//! 
//! The WDT are configured with :
//! - WDTimerInit()
//! - IWDGTimerInit()
//! - WDTimerWindowValueSet()
//! - WDTimerPrescalerSet()
//! - IWDGTimerPrescalerSet()
//! .
//! 
//! <br />
//! \subsection STM32F1xx_WDT_API_Group_Function 3.2 WDT Function APIs
//! 
//! The WDT function are set with : 
//! - WDTimerIntEnable()
//! - WDTimerIntCallbackInit()
//! - WDTimerDisable()
//! .
//! <br />
//! \subsection STM32F1xx_WDT_API_Group_Control 3.3 WDT Control APIs
//! 
//! The WDT function are set with : 
//! - WDTimerRestart()
//! - WWDGEnable()
//! - WDTimerStatusClear()
//! - WDTimerStatusGet()
//! - IWDGTimerStart()
//! - IWDGTimerRestart()
//! - IWDGTimerStatusGet().
//! .
//!
//! <br />
//! \section STM32F1xx_WDT_Usage 4. Usage & Program Examples
//! The following example shows how to use the WDT API to initialize the 
//! WDT, achieve the WDT Reset function.
//! 
//! \code
//!
//! // Set System Clock
//!
//! xSysCtlClockSet(72000000, xSYSCTL_OSC_MAIN | xSYSCTL_XTAL_8MHZ); 
//!
//! // Enable WDT periperal. 
//!
//! xSysCtlPeripheralEnable(xSYSCTL_PERIPH_WDOG);
//!
//! //
//! // Set WDT Clock Source
//! //
//! SysCtlPeripheralClockSourceSet(SYSCTL_IWDG_LSI, 1);
//! 
//! //
//! // Set WDT time-out interval.
//! //
//! IWDGTimerPrescalerSet(IWDT_PRESCALER_256);
//! IWDGTimerInit(0x8FE);
//! IWDGTimerRestart();
//! IWDGTimerStart();              
//! //
//! // You should KeepLive the Watchdog by restart.
//! //
//! IWDGTimerRestart();
//! \endcode
//! 
//
//*****************************************************************************