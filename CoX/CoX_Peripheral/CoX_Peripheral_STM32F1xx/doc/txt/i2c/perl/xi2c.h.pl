###############################################################################
# xI2C_INT_Type
###############################################################################
use Text::Table;
my $tb = Text::Table->new(
    # First separator column 
    { is_sep => 1, title => "//! +", body => "//! |", },
    
    # Column 1
    { title => "------------------------", align => left, },
    
    # Separator column
    { is_sep => 1, title => "+", body => "|", },
    
    # Column 2
    { title => "----------------", align => center, },
    
    # Separator column
    { is_sep => 1, title => "+", body => "|", },
    
    # Column 3
    { title => "------------------------", align => center, },
    
    # End separator column
    { is_sep => 1, title => "+", body => "|", },
); 

    
# Fill Table Cotent
$tb->load(
    # Line 0(Column Name)
    [ "xI2C Interrupts", "CoX", "STM32F1xx"  ],
    [ "------------------------", "----------------","------------------------", ],
    [ "xI2C_MASTER_INT_DATA", "Mandatory", "Y" ],
    [ "------------------------", "----------------","------------------------", ],
    [ "xI2C_SLAVE_INT_START", "Non-Mandatory", "N" ],
    [ "------------------------", "----------------","------------------------", ],
    [ "xI2C_SLAVE_INT_STOP", "Non-Mandatory", "N" ],
    [ "------------------------", "----------------","------------------------", ],
    [ "xI2C_SLAVE_INT_DATA", "Non-Mandatory", "N" ],
);  

# Print to console or file
print "\n#####xI2C_INT_Type\n";
print $tb; 
###############################################################################
#
###############################################################################

###############################################################################
# xI2C_General_Call
###############################################################################
use Text::Table;
my $tb = Text::Table->new(
    # First separator column 
    { is_sep => 1, title => "//! +", body => "//! |", },
    
    # Column 1
    { title => "------------------------", align => left, },
    
    # Separator column
    { is_sep => 1, title => "+", body => "|", },
    
    # Column 2
    { title => "----------------", align => center, },
    
    # Separator column
    { is_sep => 1, title => "+", body => "|", },
    
    # Column 3
    { title => "------------------------", align => center, },
    
    # End separator column
    { is_sep => 1, title => "+", body => "|", },
); 

    
# Fill Table Cotent
$tb->load(
    # Line 0(Column Name)
    [ "xI2C General Call", "CoX", "STM32F1xx"  ],
    [ "------------------------", "----------------","------------------------", ],
    [ "xI2C_GENERAL_CALL_DIS", "Mandatory", "Y" ],
    [ "------------------------", "----------------","------------------------", ],
    [ "xI2C_GENERAL_CALL_EN", "Non-Mandatory", "Y" ],
    [ "------------------------", "----------------","------------------------", ],
);  

# Print to console or file
print "\n#####xI2C_General_Call\n";
print $tb; 
###############################################################################
#
###############################################################################



###############################################################################
# xI2C_Exported_APIs
###############################################################################
use Text::Table;
my $tb = Text::Table->new(
    # First separator column 
    { is_sep => 1, title => "//! +", body => "//! |", },
    
    # Column 1
    { title => "--------------------------", align => left, },
    
    # Separator column
    { is_sep => 1, title => "+", body => "|", },
    
    # Column 2
    { title => "----------------", align => center, },
    
    # Separator column
    { is_sep => 1, title => "+", body => "|", },
    
    # Column 3
    { title => "------------------------", align => center, },
    
    # End separator column
    { is_sep => 1, title => "+", body => "|", },
); 

    
# Fill Table Cotent
$tb->load(
    # Line 0(Column Name)
    [ "xI2C API", "CoX", "STM32F1xx"  ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterInit", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterEnable", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterDisable", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterBusBusy", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterBusy", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterError", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterDataPut", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterDataGet", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterIntFlagGet", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterStop", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterWriteRequestS1", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterWriteRequestS2", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterWriteS1", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterWriteS2", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterWriteBufS1", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterWriteBufS2", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterReadRequestS1", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterReadRequestS2", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterReadLastRequestS2", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterReadS1", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ],
    [ "xI2CMasterReadS2", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ]
    [ "xI2CMasterReadBufS1", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ]
    [ "xI2CMasterReadBufS2", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ]
    [ "xI2CMasterIntEnable", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ]
    [ "xI2CMasterIntDisable", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ]
    [ "xI2CSlaveIntEnable", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ]
    [ "xI2CSlaveIntDisable", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ]
    [ "xI2CSlaveIntInit", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ]
    [ "xI2CSlaveEnable", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ]
    [ "xI2CSlaveDisable", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ]
    [ "xI2CIntCallbackInit", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ]
    [ "xI2CSlaveDataPut", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ]
    [ "xI2CSlaveDataGet", "Mandatory", "Y" ],
    [ "--------------------------", "----------------","------------------------", ]
);  

# Print to console or file
print "\n#####xI2C_Exported_APIs\n";
print $tb; 
###############################################################################
#
###############################################################################